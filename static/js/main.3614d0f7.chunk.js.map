{"version":3,"sources":["App.js","Redux/action.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["App","dispatch","useDispatch","taskArr","useSelector","state","useState","input","setInput","className","value","onChange","e","target","placeholder","Button","onClick","task","type","add","d","Date","date","getDate","month","getMonth","year","getFullYear","length","map","i","id","initState","DeleteTask","splice","TaskManager","action","arr","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"oOAsEeA,EA7DH,WAEV,IAAMC,EAAWC,cACXC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,KAHrB,EAKUC,mBAAS,IALnB,mBAKTC,EALS,KAKFC,EALE,KAsBhB,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UAEE,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,QAAQC,MAAOH,EAAOI,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAOH,QAAQI,YAAY,aAC9F,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAnBvBf,EClBe,SAACgB,GAAD,MAAW,CAC1BC,KAAM,WACND,QDgBSE,CAmBmCZ,SAlB5CC,EAAS,KAkBH,SAA8C,cAAC,IAAD,SAGhD,sBAAKC,UAAU,WAAf,UAEE,yBAAQA,UAAU,YAAlB,UACE,oBAAIA,UAAU,OAAd,SApBM,WACd,IAAIW,EAAI,IAAIC,KACRC,EAAOF,EAAEG,UACTC,EAAQJ,EAAEK,WAAa,EACvBC,EAAON,EAAEO,cACb,MAAM,GAAN,OAAUL,EAAV,YAAkBE,EAAlB,YAA2BE,GAeGH,KACtB,qBAAId,UAAU,cAAd,UAA6BN,EAAQyB,OAArC,eAGF,sBAAMnB,UAAU,YAAhB,SAEIN,EAAQ0B,KAAI,SAACZ,EAAMa,GACjB,OACE,sBAAKrB,UAAU,WAAf,UACE,mBAAGA,UAAU,OAAb,SAAqBQ,IACrB,cAACF,EAAA,EAAD,CAAQC,QAAS,kBAAMf,ECjDR,CAC/BiB,KAAM,cACNa,GD+C2DD,KAA3C,SACE,cAAC,IAAD,CAAerB,UAAU,mBAHEqB,QAUvC,iCACE,cAACf,EAAA,EAAD,CAAQN,UAAU,YAAYO,QAAS,kBAAMf,ECtD7B,CACxBiB,KAAM,gBDqDE,kC,gBE9DNc,EAAY,GAeZC,EAAa,SAAC5B,EAAO0B,GAEvB,OADA1B,EAAM6B,OAAOH,EAAI,GACV1B,GAGI8B,EAnBK,WAAgC,IAA/B9B,EAA8B,uDAAtB2B,EAAWI,EAAW,uCAC/C,OAAQA,EAAOlB,MACX,IAAK,WACD,MAAM,GAAN,mBAAWb,GAAX,CAAkB+B,EAAOnB,OAC7B,IAAK,aACD,MAAO,GACX,IAAK,cACD,IAAIoB,EAAMJ,EAAW5B,EAAO+B,EAAOL,IACnC,OAAO,YAAIM,GACf,QACI,OAAOhC,ICPJiC,EADDC,YAAYJ,GCG1BK,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.3614d0f7.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { add, deletetask, clear } from \"./Redux/action\";\nimport \"./sass/main.css\";\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\n\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n  const taskArr = useSelector(state => state)\n\n  const [input, setInput] = useState(\"\");\n\n  // dispatch action\n  const dispatchAction = (task) => {\n    dispatch(add(task));\n    setInput(\"\");\n  }\n\n  // date function\n  const getDate = () => {\n    let d = new Date();\n    let date = d.getDate()\n    let month = d.getMonth() + 1\n    let year = d.getFullYear()\n    return `${date}-${month}-${year}`\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {/* TODO FORM */}\n        <div className=\"form\">\n          <input className=\"input\" value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Add Task\" />\n          <Button onClick={() => dispatchAction(input)}><AddIcon /></Button>\n        </div>\n        {/******************* TODO APP *****************/}\n        <div className=\"todo_app\">\n          {/* todo app head */}\n          <header className=\"todo_head\">\n            <h2 className=\"date\">{getDate()}</h2>\n            <h3 className=\"no_of_tasks\">{taskArr.length} Tasks</h3>\n          </header>\n          {/* todo app body */}\n          <main className=\"todo_body\">\n            {\n              taskArr.map((task, i) => {\n                return (\n                  <div className=\"task_div\" key={i}>\n                    <p className=\"task\">{task}</p>\n                    <Button onClick={() => dispatch(deletetask(i))}>\n                      <BackspaceIcon className=\"delete_btn\" />\n                    </Button>\n                  </div>\n                )\n              })\n            }\n          </main>\n          <footer>\n            <Button className=\"clear_btn\" onClick={() => dispatch(clear())} >Clear All</Button>\n          </footer>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const add = (task) => ({\r\n    type: \"ADD-TASK\",\r\n    task\r\n})\r\nexport const deletetask = (id) => ({\r\n    type: \"DELETE-TASK\",\r\n    id\r\n})\r\nexport const clear = () => ({\r\n    type: \"CLEAR-TASK\"\r\n})","const initState = []\r\nconst TaskManager = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD-TASK\":\r\n            return [...state, action.task]\r\n        case \"CLEAR-TASK\":\r\n            return []\r\n        case \"DELETE-TASK\":\r\n            let arr = DeleteTask(state, action.id)\r\n            return [...arr]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst DeleteTask = (state, id) => {\r\n    state.splice(id, 1);\r\n    return state;\r\n}\r\n\r\nexport default TaskManager","import { createStore } from \"redux\";\r\nimport TaskManager from \"./reducer\"\r\n\r\nconst store = createStore(TaskManager)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\"\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}